<!-- 読み込み -->

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
<style>
	.page-top
	{
		/*display: none ;*/
		margin: 0 ;
		padding: 0 ;
	}
	.page-top p
	{
		margin: 0 ;
		padding: 0 ;
		position: fixed ;
		right: 16px ;
		bottom: 16px ;
	}
	.move-page-top
	{
		display: block ;
		background: #d01254;
		width: 50px ;
		height: 50px ;
		color: #fff ;
		line-height: 50px ;
		text-decoration: none ;
		text-align: center ;
		-webkit-transition:all 0.03s ;
		-moz-transition:all 0.03s ;
		transition:all 0.03s ;
	}
	.move-page-top:hover
	{
		opacity: 0.5 ;
	}
</style>
<div id="page-top" class="page-top">
	<p><a id="move-page-top" class="move-page-top"><i class="fa fa-caret-up"></i></a></p>
</div>

<!-- 読み込み ここまで -->

[TOC]

# <i class="fa fa-cubes"></i> Linuxがわからない
	ので頑張って勉強していきましょう

## <i class="fa fa-cube"></i> Linuxってなに
>オープンソースのOS
>世界中の有志たちがボランティア的に作り上げ、無料で使え、中身も完全に公開されている状態で世に放たれている

## <i class="fa fa-cube"></i> Linuxのいいところ
1. 無料
1. ソフトも軒並み無料
1. 中身が弄れる
1. サーバーを自由に立てられる
1. 新しいOSを作ることができる
1. 家電や車、ゲーム、高性能コンピュータに使われている
1. プレステにもインストールできる
1. 軽い
1. CUIの操作に~~嫌でも~~慣れる
1. Linux使ってるｵﾚｶｯｺｲｲができる

## <i class="fa fa-cube"></i> LinuxはLinuxでも色々ある
オープンソースで技術者たちが俺色に染めたらぁ精神で開発しまくったため沢山の種類がある。  
この種類のことをディストリビューションという。  
GoogleのAndroidもディストリビューションの一つ  

主要なのは3つ

1. Red Hat系
1. Debian系
1. Slackware系

### <i class="fa fa-arrow-circle-right"></i> Red Hat系
* Linux界隈では有名なRedHat社が開発している有償のディストリビューション
* でも無償版もあるよ
	* CentOS
	* Fedora

### <i class="fa fa-arrow-circle-right"></i> Debian系
* ボランティアのステキなガイ達が中心になって開発を進めているディストリビューション
* UbuntuやLinux Mintはここからでてきた

### <i class="fa fa-arrow-circle-right"></i> Slackware系
* 使うのが難しいディストリビューション
* 安定性が高い
* セキュリティが固い
* 難しい
* 速い
* 難しい

# <i class="fa fa-cube"></i> 不肖のnoobが使ったコマンド
## a
## b
## c
#### <i class="fa fa-arrow-circle-right"></i> cat
* ファイルの内容を表示する
* 複数のファイルを連結して出力することもできる

#### <i class="fa fa-arrow-circle-right"></i> cd
* カレント・ディレクトリを変更する
* 移動先を指定しないとユーザーのホームディレクトリに移動する

```bash
「file1」を行番号をつけて表示
$ cat -n file1
「file1」と「file2」を連結して「file3」に出力
$ cat file1 file2 > file3
```

#### <i class="fa fa-arrow-circle-right"></i> cp
* ファイルのコピー

```bash
#ファイル「file1」を属性を保持して「file1.0114」という名前でコピー
$ cp -p file1 file1.0114

#２つのファイルを「/tmp」にコピー
#確認なしで上書き
$ cp -f file1 file2 /tmp/

```

## d
## e
## f
#### <i class="fa fa-arrow-circle-right"></i> find
* 指定されたディレクトリ以下の階層から、与えられた条件に適合するファイルを検索

```bash
#「/wrk」以下から、ディレクトリかつ、最終更新時刻が10日以上前のファイルを検索し、確認の上、ディレクトリごと削除します。
$ find /wrk/* -type d -mtime '+10' -ok rm -r {}\
```

## g
## h
## i
## j
## k
## l
#### <i class="fa fa-arrow-circle-right"></i> ls
* ファイルやディレクトリの情報を表示する

## m
#### <i class="fa fa-arrow-circle-right"></i> mkdir
* 新しいディレクトリを作成する
* ディレクトリにパスを指定していればその位置に、パスがなければカレント・ディレクトリに作成されます。

```bash
# ディレクトリ「dir1」をパーミッション「777」で作成
$ mkdir -m 777 dir1

# ディレクトリ「usr1」を作成
$ mkdir -p work/usr1
# 存在しない親ディレクトリ「work」も同時に作成します。
```

## n
## o
## p
## q
## r
## s
#### <i class="fa fa-arrow-circle-right"></i> su
* 他のユーザーアカウントに切り替える
* ユーザー名を指定しない場合は「root」ユーザー(管理者権限)を指定したものとみなす

## t
## u
## v
#### <i class="fa fa-arrow-circle-right"></i> vi
* テキストファイルの内容を編集する
* 指定されたファイルが存在しない場合はファイルを新規作成する
* コマンドモードと編集モードの２種類のモードが存在する
	* 起動直後はコマンドモードになる
	* [コマンドモード] 以下に示す各種コマンドを操作して、様々な操作を行います。
	* [編集モード] 実際に文字の入力を行います。

```bash
#「file1」の内容を編集
$ vi file1
```

## w
## x
## y
## z
## other
#### <i class="fa fa-arrow-circle-right"></i> >>
* 出力をファイルへ追記する

```bash
#name_fileから文字列"hoge"を探し，resultファイルに追加書き込みをする
$ grep "hoge2" name_file >> result
```

<!-- script -->

<script src="https://code.jquery.com/jquery-3.2.1.js"integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE="crossorigin="anonymous"></script>
<script type="text/javascript">
	$("#setNum").click(function(){
		var date     = $("#date").val();
		var iraiNo   = $("#iraiNo").val();
		var couponNo = $("#couponNo").val();
		
		$('.codehilite').each( function() {
      var txt= $(this).html();

      // yymmddを置換
      txt = $(this).html(txt.replace(new RegExp('yymmdd',"g"), date)).html();

      // 管理番号を置換
      txt = $(this).html(txt.replace(new RegExp('●●●●',"g"), iraiNo)).html();
      
      // クーポン番号を置換
      txt = $(this).html(txt.replace(new RegExp('xxxxxxx', "g"), couponNo)).html();
    });
		
		// formを置換済みテキストに差し替え
		$(".form").html("<table><tr><th>本日の日付（yymmdd）</th><th>管理番号下4桁</th><th>クーポン番号（7桁）</th></tr><tr><td>" + date + "</td><td>" + iraiNo + "</td><td>" + couponNo + "</td></tr></table>");
	});
</script>
<script>
	// グローバル変数
	var syncerTimeout = null ;

	// 一連の処理
	$( function()
	{
		// スクロールイベントの設定
		$( window ).scroll( function()
		{
			// 1秒ごとに処理
			if( syncerTimeout == null )
			{
				// セットタイムアウトを設定
				syncerTimeout = setTimeout( function(){

					// 対象のエレメント
					var element = $( '#page-top' ) ;

					// 現在、表示されているか？
					var visible = element.is( ':visible' ) ;

					// 最上部から現在位置までの距離を取得して、変数[now]に格納
					var now = $( window ).scrollTop() ;

					// 最下部から現在位置までの距離を計算して、変数[under]に格納
					var under = $( 'body' ).height() - ( now + $(window).height() ) ;

					// 最上部から現在位置までの距離(now)が1500以上かつ
					// 最下部から現在位置までの距離(under)が200px以上かつ…
					// if( now > 1500 && 200 < under )
					// {
					// 	// 非表示状態だったら
					// 	if( !visible )
					// 	{
					// 		// [#page-top]をゆっくりフェードインする
					// 		element.fadeIn( 'slow' ) ;
					// 	}
					// }

					// // 1500px以下かつ
					// // 表示状態だったら
					// else if( visible )
					// {
					// 	// [#page-top]をゆっくりフェードアウトする
					// 	element.fadeOut( 'slow' ) ;
					// }

					// フラグを削除
					syncerTimeout = null ;
				} , 1000 ) ;
			}
		} ) ;

		// クリックイベントを設定する
		$( '#move-page-top' ).click(
			function()
			{
				// スムーズにスクロールする
				$( 'html,body' ).animate( {scrollTop:0} , 'slow' ) ;
			}
		) ;
	} ) ;
</script>

<!-- script -->

[TOC]

# <i class="fa fa-cubes"></i> Linuxがわからない
	ので頑張って勉強していきましょう

## <i class="fa fa-cube"></i> Linuxってなに
>オープンソースのOS
>世界中の有志たちがボランティア的に作り上げ、無料で使え、中身も完全に公開されている状態で世に放たれている

## <i class="fa fa-cube"></i> Linuxのいいところ
1. 無料
1. ソフトも軒並み無料
1. 中身が弄れる
1. サーバーを自由に立てられる
1. 新しいOSを作ることができる
1. 家電や車、ゲーム、高性能コンピュータに使われている
1. プレステにもインストールできる
1. 軽い
1. CUIの操作に~~嫌でも~~慣れる
1. Linux使ってるｵﾚｶｯｺｲｲができる

## <i class="fa fa-cube"></i> LinuxはLinuxでも色々ある
オープンソースで技術者たちが俺色に染めたらぁ精神で開発しまくったため沢山の種類がある。  
この種類のことをディストリビューションという。  
GoogleのAndroidもディストリビューションの一つ  

主要なのは3つ

1. Red Hat系
1. Debian系
1. Slackware系

### <i class="fa fa-arrow-circle-right"></i> Red Hat系
* Linux界隈では有名なRedHat社が開発している有償のディストリビューション
* でも無償版もあるよ
	* CentOS
	* Fedora

### <i class="fa fa-arrow-circle-right"></i> Debian系
* ボランティアのステキなガイ達が中心になって開発を進めているディストリビューション
* UbuntuやLinux Mintはここからでてきた

### <i class="fa fa-arrow-circle-right"></i> Slackware系
* 使うのが難しいディストリビューション
* 安定性が高い
* セキュリティが固い
* 難しい
* 速い
* 難しい

# <i class="fa fa-cube"></i> 不肖のnoobが使ったコマンド
## a
## b
## c
#### <i class="fa fa-arrow-circle-right"></i> cat
* ファイルの内容を表示する
* 複数のファイルを連結して出力することもできる

#### <i class="fa fa-arrow-circle-right"></i> cd
* カレント・ディレクトリを変更する
* 移動先を指定しないとユーザーのホームディレクトリに移動する

```bash
「file1」を行番号をつけて表示
$ cat -n file1
「file1」と「file2」を連結して「file3」に出力
$ cat file1 file2 > file3
```

#### <i class="fa fa-arrow-circle-right"></i> cp
* ファイルのコピー

```bash
#ファイル「file1」を属性を保持して「file1.0114」という名前でコピー
$ cp -p file1 file1.0114

#２つのファイルを「/tmp」にコピー
#確認なしで上書き
$ cp -f file1 file2 /tmp/

```

## d
## e
## f
#### <i class="fa fa-arrow-circle-right"></i> find
* 指定されたディレクトリ以下の階層から、与えられた条件に適合するファイルを検索

```bash
#「/wrk」以下から、ディレクトリかつ、最終更新時刻が10日以上前のファイルを検索し、確認の上、ディレクトリごと削除します。
$ find /wrk/* -type d -mtime '+10' -ok rm -r {}\
```

## g
## h
## i
## j
## k
## l
#### <i class="fa fa-arrow-circle-right"></i> ls
* ファイルやディレクトリの情報を表示する

## m
#### <i class="fa fa-arrow-circle-right"></i> mkdir
* 新しいディレクトリを作成する
* ディレクトリにパスを指定していればその位置に、パスがなければカレント・ディレクトリに作成されます。

```bash
# ディレクトリ「dir1」をパーミッション「777」で作成
$ mkdir -m 777 dir1

# ディレクトリ「usr1」を作成
$ mkdir -p work/usr1
# 存在しない親ディレクトリ「work」も同時に作成します。
```

## n
## o
## p
## q
## r
## s
#### <i class="fa fa-arrow-circle-right"></i> su
* 他のユーザーアカウントに切り替える
* ユーザー名を指定しない場合は「root」ユーザー(管理者権限)を指定したものとみなす

## t
## u
## v
#### <i class="fa fa-arrow-circle-right"></i> vi
* テキストファイルの内容を編集する
* 指定されたファイルが存在しない場合はファイルを新規作成する
* コマンドモードと編集モードの２種類のモードが存在する
	* 起動直後はコマンドモードになる
	* [コマンドモード] 以下に示す各種コマンドを操作して、様々な操作を行います。
	* [編集モード] 実際に文字の入力を行います。

```bash
#「file1」の内容を編集
$ vi file1
```

## w
## x
## y
## z
## other
#### <i class="fa fa-arrow-circle-right"></i> >>
* 出力をファイルへ追記する

```bash
#name_fileから文字列"hoge"を探し，resultファイルに追加書き込みをする
$ grep "hoge2" name_file >> result
```
